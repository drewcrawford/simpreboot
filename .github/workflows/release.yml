on:
    push:
        # Sequence of patterns matched against refs/tags
        tags:
        - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    
    name: Configure release
    jobs:
      build:
        name: Upload Release Asset
        runs-on: macos-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v2
          - name: Build project
            run: |
              #use this scheme to make universal binaries because it's not supported out of the box, evidently.
              swift build --configuration release --arch arm64 --arch x86_64
              #all products
              zip -r simpreboot-symbols.zip .build/apple/Products/Release
              #binary only
              zip --junk-paths simpreboot.zip .build/apple/Products/Release/simpreboot
          - name: Create Release
            id: create_release
            uses: actions/create-release@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              tag_name: ${{ github.ref }}
              release_name: ${{ github.ref }}
              draft: true
              prerelease: false
          - name: Upload main binary
            id: upload-release-asset 
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
              asset_path: ./simpreboot.zip
              asset_name: simpreboot.zip
              asset_content_type: application/zip
        
          - name: Upload main binary
            id: upload-release-asset 
            uses: actions/upload-release-asset@v1
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              upload_url: ${{ steps.create_release.outputs.upload_url }}
              asset_path: ./simpreboot-symbols.zip
              asset_name: simpreboot-symbols.zip
              asset_content_type: application/zip